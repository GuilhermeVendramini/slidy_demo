[1mdiff --git a/lib/src/app_bloc.dart b/lib/src/app_bloc.dart[m
[1mindex 6badf52..0c79c05 100644[m
[1m--- a/lib/src/app_bloc.dart[m
[1m+++ b/lib/src/app_bloc.dart[m
[36m@@ -1,7 +1,7 @@[m
 import 'package:bloc_pattern/bloc_pattern.dart';[m
 import 'package:rxdart/subjects.dart';[m
 [m
[31m-import 'models/user/user_model.dart';[m
[32m+[m[32mimport 'shared/models/user/user_model.dart';[m
 [m
 class AppBloc extends BlocBase {[m
   BehaviorSubject<UserModel> userController = BehaviorSubject<UserModel>();[m
[1mdiff --git a/lib/src/app_module.dart b/lib/src/app_module.dart[m
[1mindex 7084514..d738769 100644[m
[1m--- a/lib/src/app_module.dart[m
[1m+++ b/lib/src/app_module.dart[m
[36m@@ -1,9 +1,8 @@[m
[31m-import 'package:hasura_connect/hasura_connect.dart';[m
[31m-//import 'package:slidy_demo/src/repositories/firebase/firebase_repository.dart';[m
 import 'package:bloc_pattern/bloc_pattern.dart';[m
 import 'package:flutter/material.dart';[m
[31m-import 'package:slidy_demo/src/app_widget.dart';[m
[32m+[m[32mimport 'package:hasura_connect/hasura_connect.dart';[m
 import 'package:slidy_demo/src/app_bloc.dart';[m
[32m+[m[32mimport 'package:slidy_demo/src/app_widget.dart';[m
 [m
 import 'repositories/hasura/message/hasura_message_repository.dart';[m
 import 'repositories/hasura/user/hasura_user_repository.dart';[m
[36m@@ -16,7 +15,8 @@[m [mclass AppModule extends ModuleWidget {[m
 [m
   @override[m
   List<Dependency> get dependencies => [[m
[31m-        Dependency((i) => HasuraConnect("https://flutter-hasura-demo.herokuapp.com/v1/graphql")),[m
[32m+[m[32m        Dependency((i) => HasuraConnect([m
[32m+[m[32m            "https://flutter-hasura-demo.herokuapp.com/v1/graphql")),[m
         //Dependency((i) => FirebaseRepository()),[m
         Dependency((i) => HasuraUserRepository(i.get<HasuraConnect>())),[m
         Dependency((i) => HasuraMessageRepository(i.get<HasuraConnect>())),[m
[1mdiff --git a/lib/src/modules/home/home_bloc.dart b/lib/src/modules/home/home_bloc.dart[m
[1mindex fcfe652..d15a740 100644[m
[1m--- a/lib/src/modules/home/home_bloc.dart[m
[1m+++ b/lib/src/modules/home/home_bloc.dart[m
[36m@@ -2,16 +2,17 @@[m [mimport 'package:bloc_pattern/bloc_pattern.dart';[m
 import 'package:flutter/material.dart';[m
 import 'package:rxdart/rxdart.dart';[m
 import 'package:rxdart/subjects.dart';[m
[31m-import '../../models/message/message_model.dart';[m
[31m-import '../../repositories/hasura/message/hasura_message_repository.dart';[m
 [m
 import '../../app_bloc.dart';[m
[32m+[m[32mimport '../../repositories/hasura/message/hasura_message_repository.dart';[m
[32m+[m[32mimport '../../shared/models/message/message_model.dart';[m
 [m
 class HomeBloc extends BlocBase {[m
   final HasuraMessageRepository _messageRepository;[m
   final AppBloc _appBloc;[m
 [m
[31m-  BehaviorSubject<List<MessageModel>> messagesController = BehaviorSubject<List<MessageModel>>();[m
[32m+[m[32m  BehaviorSubject<List<MessageModel>> messagesController =[m
[32m+[m[32m      BehaviorSubject<List<MessageModel>>();[m
   TextEditingController messageTextEditingController = TextEditingController();[m
 [m
   HomeBloc(this._messageRepository, this._appBloc) {[m
[36m@@ -19,11 +20,13 @@[m [mclass HomeBloc extends BlocBase {[m
   }[m
 [m
   void sendMessage() {[m
[31m-    _messageRepository.sendMessage([m
[31m-      messageTextEditingController.text,[m
[31m-      _appBloc.userController.value.id,[m
[31m-    );[m
[31m-    messageTextEditingController.clear();[m
[32m+[m[32m    if (messageTextEditingController.text.isNotEmpty) {[m
[32m+[m[32m      _messageRepository.sendMessage([m
[32m+[m[32m        messageTextEditingController.text,[m
[32m+[m[32m        _appBloc.userController.value.id,[m
[32m+[m[32m      );[m
[32m+[m[32m      messageTextEditingController.clear();[m
[32m+[m[32m    }[m
   }[m
 [m
   //dispose will be called automatically by closing its streams[m
[1mdiff --git a/lib/src/modules/home/home_module.dart b/lib/src/modules/home/home_module.dart[m
[1mindex e4456e3..1ee549b 100644[m
[1m--- a/lib/src/modules/home/home_module.dart[m
[1m+++ b/lib/src/modules/home/home_module.dart[m
[36m@@ -11,9 +11,9 @@[m [mclass HomeModule extends ModuleWidget {[m
   @override[m
   List<Bloc> get blocs => [[m
         Bloc((i) => HomeBloc([m
[31m-          AppModule.to.get<HasuraMessageRepository>(),[m
[31m-          AppModule.to.bloc<AppBloc>(),[m
[31m-        )),[m
[32m+[m[32m              AppModule.to.get<HasuraMessageRepository>(),[m
[32m+[m[32m              AppModule.to.bloc<AppBloc>(),[m
[32m+[m[32m            )),[m
       ];[m
 [m
   @override[m
[1mdiff --git a/lib/src/modules/home/home_page.dart b/lib/src/modules/home/home_page.dart[m
[1mindex c2d1e50..89c3dd0 100644[m
[1m--- a/lib/src/modules/home/home_page.dart[m
[1m+++ b/lib/src/modules/home/home_page.dart[m
[36m@@ -1,6 +1,6 @@[m
 import 'package:flutter/material.dart';[m
 [m
[31m-import '../../models/message/message_model.dart';[m
[32m+[m[32mimport '../../shared/models/message/message_model.dart';[m
 import 'home_bloc.dart';[m
 import 'home_module.dart';[m
 [m
[36m@@ -10,7 +10,8 @@[m [mclass HomePage extends StatefulWidget {[m
 }[m
 [m
 class _HomePageState extends State<HomePage> {[m
[31m-  final bloc = HomeModule.to.bloc<HomeBloc>();[m
[32m+[m[32m  final _blocMessage = HomeModule.to.bloc<HomeBloc>();[m
[32m+[m[32m  bool _enableSend = false;[m
 [m
   @override[m
   Widget build(BuildContext context) {[m
[36m@@ -20,7 +21,7 @@[m [mclass _HomePageState extends State<HomePage> {[m
         title: Text("Home"),[m
       ),[m
       body: StreamBuilder<List<MessageModel>>([m
[31m-        stream: bloc.messagesController,[m
[32m+[m[32m        stream: _blocMessage.messagesController,[m
         builder: (context, snapshot) {[m
           if (!snapshot.hasData)[m
             return Center(child: CircularProgressIndicator());[m
[36m@@ -40,18 +41,28 @@[m [mclass _HomePageState extends State<HomePage> {[m
                 ),[m
               ),[m
               Padding([m
[31m-                padding: const EdgeInsets.fromLTRB(5,0,5,5),[m
[32m+[m[32m                padding: const EdgeInsets.fromLTRB(5, 0, 5, 5),[m
                 child: TextField([m
[31m-                  controller: bloc.messageTextEditingController,[m
[32m+[m[32m                  controller: _blocMessage.messageTextEditingController,[m
[32m+[m[32m                  onChanged: (value) {[m
[32m+[m[32m                    print(_blocMessage.messageTextEditingController.text);[m
[32m+[m[32m                    setState(() {[m
[32m+[m[32m                      value.isEmpty ? _enableSend = false : _enableSend = true;[m
[32m+[m[32m                    });[m
[32m+[m[32m                  },[m
                   decoration: InputDecoration([m
                     border: OutlineInputBorder(),[m
[31m-                    suffixIcon: IconButton([m
[31m-                      icon: Icon(Icons.send),[m
[31m-                      onPressed: bloc.sendMessage,[m
[31m-                    ),[m
                   ),[m
                 ),[m
               ),[m
[32m+[m[32m              RaisedButton([m
[32m+[m[32m                child: Text('Send'),[m
[32m+[m[32m                onPressed: _enableSend &&[m
[32m+[m[32m                        _blocMessage[m
[32m+[m[32m                            .messageTextEditingController.text.isNotEmpty[m
[32m+[m[32m                    ? _blocMessage.sendMessage[m
[32m+[m[32m                    : null,[m
[32m+[m[32m              ),[m
             ],[m
           );[m
         },[m
[1mdiff --git a/lib/src/modules/login/login_bloc.dart b/lib/src/modules/login/login_bloc.dart[m
[1mindex 89f5d05..e5e4e00 100644[m
[1m--- a/lib/src/modules/login/login_bloc.dart[m
[1m+++ b/lib/src/modules/login/login_bloc.dart[m
[36m@@ -1,9 +1,9 @@[m
 import 'package:bloc_pattern/bloc_pattern.dart';[m
 import 'package:flutter/material.dart';[m
[31m-import '../../repositories/hasura/user/hasura_user_repository.dart';[m
 [m
 import '../../app_bloc.dart';[m
 import '../../app_module.dart';[m
[32m+[m[32mimport '../../repositories/hasura/user/hasura_user_repository.dart';[m
 [m
 class LoginBloc extends BlocBase {[m
   final HasuraUserRepository _userRepository;[m
[1mdiff --git a/lib/src/repositories/hasura/message/hasura_message_repository.dart b/lib/src/repositories/hasura/message/hasura_message_repository.dart[m
[1mindex b798f26..70f058c 100644[m
[1m--- a/lib/src/repositories/hasura/message/hasura_message_repository.dart[m
[1m+++ b/lib/src/repositories/hasura/message/hasura_message_repository.dart[m
[36m@@ -1,7 +1,7 @@[m
 import 'package:bloc_pattern/bloc_pattern.dart';[m
 import 'package:hasura_connect/hasura_connect.dart';[m
[31m-import '../../../models/message/message_model.dart';[m
[31m-import '../../../models/user/user_model.dart';[m
[32m+[m
[32m+[m[32mimport '../../../shared/models/message/message_model.dart';[m
 [m
 class HasuraMessageRepository extends Disposable {[m
   final HasuraConnect connection;[m
[36m@@ -24,11 +24,11 @@[m [mclass HasuraMessageRepository extends Disposable {[m
 [m
     Snapshot snapshot = connection.subscription(query);[m
     return snapshot.stream.map([m
[31m-          (jsonList) => MessageModel.fromJsonList(jsonList["data"]["messages"]),[m
[32m+[m[32m      (jsonList) => MessageModel.fromJsonList(jsonList["data"]["messages"]),[m
     );[m
   }[m
 [m
[31m-  Future<dynamic> sendMessage(String message, int userId){[m
[32m+[m[32m  Future<dynamic> sendMessage(String message, int userId) {[m
     var query = """[m
       sendMessage(\$message:String!,\$userId:Int!) {[m
         insert_messages(objects: {id_user: \$userId, content: \$message}) {[m
[1mdiff --git a/lib/src/repositories/hasura/user/hasura_user_repository.dart b/lib/src/repositories/hasura/user/hasura_user_repository.dart[m
[1mindex 8c9dc1b..fc5812a 100644[m
[1m--- a/lib/src/repositories/hasura/user/hasura_user_repository.dart[m
[1m+++ b/lib/src/repositories/hasura/user/hasura_user_repository.dart[m
[36m@@ -1,6 +1,7 @@[m
 import 'package:bloc_pattern/bloc_pattern.dart';[m
 import 'package:hasura_connect/hasura_connect.dart';[m
[31m-import '../../../models/user/user_model.dart';[m
[32m+[m
[32m+[m[32mimport '../../../shared/models/user/user_model.dart';[m
 [m
 class HasuraUserRepository extends Disposable {[m
   final HasuraConnect connection;[m
[36m@@ -17,7 +18,8 @@[m [mclass HasuraUserRepository extends Disposable {[m
       }[m
     """;[m
 [m
[31m-    Map<String, dynamic> data = await connection.query(query, variables: {"name": user});[m
[32m+[m[32m    Map<String, dynamic> data =[m
[32m+[m[32m        await connection.query(query, variables: {"name": user});[m
     if (data["data"]["users"].isEmpty) {[m
       return createUser(user);[m
     } else {[m
[36m@@ -36,7 +38,8 @@[m [mclass HasuraUserRepository extends Disposable {[m
       }[m
     """;[m
 [m
[31m-    Map<String, dynamic> data = await connection.mutation(query, variables: {"name": name});[m
[32m+[m[32m    Map<String, dynamic> data =[m
[32m+[m[32m        await connection.mutation(query, variables: {"name": name});[m
     int id = data["data"]["insert_users"]["returning"][0]["id"];[m
     return UserModel(id: id, name: name);[m
   }[m
[1mdiff --git a/lib/src/shared/models/message/message_model.dart b/lib/src/shared/models/message/message_model.dart[m
[1mindex 2f3739a..b68e86d 100644[m
[1m--- a/lib/src/shared/models/message/message_model.dart[m
[1m+++ b/lib/src/shared/models/message/message_model.dart[m
[36m@@ -2,7 +2,8 @@[m [mimport 'dart:convert';[m
 [m
 import '../user/user_model.dart';[m
 [m
[31m-MessageModel messageModelFromJson(String str) => MessageModel.fromJson(json.decode(str));[m
[32m+[m[32mMessageModel messageModelFromJson(String str) =>[m
[32m+[m[32m    MessageModel.fromJson(json.decode(str));[m
 [m
 String messageModelToJson(MessageModel data) => json.encode(data.toJson());[m
 [m
[36m@@ -18,22 +19,19 @@[m [mclass MessageModel {[m
   });[m
 [m
   factory MessageModel.fromJson(Map<String, dynamic> json) => new MessageModel([m
[31m-    content: json["content"],[m
[31m-    id: json["id"],[m
[31m-    user: UserModel.fromJson(json["user"]),[m
[31m-  );[m
[32m+[m[32m        content: json["content"],[m
[32m+[m[32m        id: json["id"],[m
[32m+[m[32m        user: UserModel.fromJson(json["user"]),[m
[32m+[m[32m      );[m
 [m
   Map<String, dynamic> toJson() => {[m
[31m-    "content": content,[m
[31m-    "id": id,[m
[31m-    "user": user.toJson(),[m
[31m-  };[m
[31m-[m
[31m-[m
[31m-  static List<MessageModel> fromJsonList(List list){[m
[31m-    if(list == null) return null;[m
[31m-    return list[m
[31m-        .map((item) => MessageModel.fromJson(item))[m
[31m-        .toList();[m
[32m+[m[32m        "content": content,[m
[32m+[m[32m        "id": id,[m
[32m+[m[32m        "user": user.toJson(),[m
[32m+[m[32m      };[m
[32m+[m
[32m+[m[32m  static List<MessageModel> fromJsonList(List list) {[m
[32m+[m[32m    if (list == null) return null;[m
[32m+[m[32m    return list.map((item) => MessageModel.fromJson(item)).toList();[m
   }[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m}[m
[1mdiff --git a/lib/src/shared/models/user/user_model.dart b/lib/src/shared/models/user/user_model.dart[m
[1mindex 48ea648..b355464 100644[m
[1m--- a/lib/src/shared/models/user/user_model.dart[m
[1m+++ b/lib/src/shared/models/user/user_model.dart[m
[36m@@ -14,12 +14,12 @@[m [mclass UserModel {[m
   });[m
 [m
   factory UserModel.fromJson(Map<String, dynamic> json) => new UserModel([m
[31m-    name: json["name"],[m
[31m-    id: json["id"],[m
[31m-  );[m
[32m+[m[32m        name: json["name"],[m
[32m+[m[32m        id: json["id"],[m
[32m+[m[32m      );[m
 [m
   Map<String, dynamic> toJson() => {[m
[31m-    "name": name,[m
[31m-    "id": id,[m
[31m-  };[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m        "name": name,[m
[32m+[m[32m        "id": id,[m
[32m+[m[32m      };[m
[32m+[m[32m}[m
